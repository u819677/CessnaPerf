{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red93\green108\blue121;\red255\green255\blue255;\red0\green0\blue0;
\red14\green14\blue255;\red155\green35\blue147;\red11\green79\blue121;\red57\green0\blue160;\red108\green54\blue169;
\red50\green109\blue116;\red15\green104\blue160;\red196\green26\blue22;\red28\green0\blue207;}
{\*\expandedcolortbl;;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c5500\c5500\c100000;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c42190\c21278\c66379;
\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c11000\c0\c81000;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 // From SwiftUI by Example by Paul Hudson\cf4 \
\cf2 // \cf5 https://www.hackingwithswift.com/quick-start/swiftui\cf4 \
\cf2 //\cf4 \
\cf2 // You're welcome to use this code for any purpose,\cf4 \
\cf2 // commercial or otherwise, with or without attribution.\cf4 \
\cf2 //\cf4 \
\

\f1\b \cf6 import
\f0\b0 \cf4  SwiftUI\
\

\f1\b \cf6 struct
\f0\b0 \cf4  \cf7 ContentView\cf4 : \cf8 View\cf4  \{\
    \cf9 @Environment\cf4 (\\.\cf10 scenePhase\cf4 ) 
\f1\b \cf6 var
\f0\b0 \cf4  \cf11 scenePhase\cf4 \
    
\f1\b \cf6 let
\f0\b0 \cf4  \cf11 userDefaults\cf4  = \cf8 UserDefaults\cf4 .\cf9 standard\cf4 \
    \cf2 // let calcTime: Date\cf4 \
    \cf8 @State\cf4  
\f1\b \cf6 var
\f0\b0 \cf4  \cf11 textDisplayed\cf4 : \cf8 String\cf4  = \cf12 "StartingText"\cf4 \
    
\f1\b \cf6 init
\f0\b0 \cf4 () \{\
        \cf10 userDefaults\cf4 .\cf9 set\cf4 (\cf8 Date\cf4 (), \cf9 forKey\cf4 : \cf12 "calcTime"\cf4 )\
    \}\
    
\f1\b \cf6 var
\f0\b0 \cf4  \cf11 body\cf4 : 
\f1\b \cf6 some
\f0\b0 \cf4  \cf8 View\cf4  \{\
        \cf8 Text\cf4 (\cf10 textDisplayed\cf4 )\
            .\cf9 onChange\cf4 (\cf9 of\cf4 : \cf10 scenePhase\cf4 ) \{ newPhase 
\f1\b \cf6 in
\f0\b0 \cf4 \
                
\f1\b \cf6 if
\f0\b0 \cf4  newPhase == .\cf9 inactive\cf4  \{\
                    \cf9 print\cf4 (\cf12 "Inactive"\cf4 )\
                    \cf10 textDisplayed\cf4  = \cf12 "Inactive"\cf4 \
                \} 
\f1\b \cf6 else
\f0\b0 \cf4  
\f1\b \cf6 if
\f0\b0 \cf4  newPhase == .\cf9 active\cf4  \{\
                    \cf9 print\cf4 (\cf12 "Active"\cf4 )\
                    \cf10 textDisplayed\cf4  = \cf12 "Active"\cf4 \
                    
\f1\b \cf6 let
\f0\b0 \cf4  now = \cf8 Date\cf4 .\cf9 now\cf4 \
                    
\f1\b \cf6 let
\f0\b0 \cf4  calcTime = \cf10 userDefaults\cf4 .\cf9 object\cf4 (\cf9 forKey\cf4 : \cf12 "calcTime"\cf4 ) 
\f1\b \cf6 as
\f0\b0 \cf4 ! \cf8 Date\cf4 \
                    \cf9 print\cf4 (\cf12 "calcTime is \cf4 \\(calcTime)\cf12 "\cf4 )\
                    \cf9 print\cf4 (\cf12 "time (now) when became active is:\cf4 \\(now)\cf12 "\cf4 )\
                    
\f1\b \cf6 let
\f0\b0 \cf4  expiryTime = calcTime.\cf9 addingTimeInterval\cf4 (\cf13 10\cf4 )\
                    \cf9 print\cf4 (\cf12 "expiryTime is \cf4 \\(expiryTime)\cf12 "\cf4 )\
                    \
                    \
                    
\f1\b \cf6 let
\f0\b0 \cf4  range = calcTime...expiryTime\
                    \cf9 print\cf4 (range)\
                    
\f1\b \cf6 if
\f0\b0 \cf4  range.\cf9 contains\cf4 (now) \{\
                        \cf9 print\cf4 (\cf12 "in range, within 10 s"\cf4 )\
                    \}\
                    \
                \} 
\f1\b \cf6 else
\f0\b0 \cf4  
\f1\b \cf6 if
\f0\b0 \cf4  newPhase == .\cf9 background\cf4  \{\
                    \cf9 print\cf4 (\cf12 "Background"\cf4 )\
                    \cf10 textDisplayed\cf4  = \cf12 "Background"\cf4 \
                    \
                \}\
            \}\
    \}\
\}\
//toggle switch \

\f1\b \cf6 import
\f0\b0 \cf4  SwiftUI\
\

\f1\b \cf6 struct
\f0\b0 \cf4  \cf7 ContentView\cf4 : \cf8 View\cf4  \{\
    \cf8 @State\cf4  
\f1\b \cf6 private
\f0\b0 \cf4  
\f1\b \cf6 var
\f0\b0 \cf4  \cf11 isOn\cf4  = 
\f1\b \cf6 false
\f0\b0 \cf4 \
\
    
\f1\b \cf6 var
\f0\b0 \cf4  \cf11 body\cf4 : 
\f1\b \cf6 some
\f0\b0 \cf4  \cf8 View\cf4  \{\
        \cf8 Toggle\cf4 (\cf12 "Filter"\cf4 , \cf8 isOn\cf4 : \cf10 $isOn\cf4 )\
            .\cf9 toggleStyle\cf4 (.\cf9 button\cf4 )\
            .\cf9 tint\cf4 (.\cf9 mint\cf4 )\
    \}\
\}\
\
}