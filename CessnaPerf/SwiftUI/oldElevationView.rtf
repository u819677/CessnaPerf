{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red93\green108\blue121;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red11\green79\blue121;\red57\green0\blue160;\red15\green104\blue160;\red108\green54\blue169;
\red28\green0\blue207;\red196\green26\blue22;\red50\green109\blue116;}
{\*\expandedcolortbl;;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c42190\c21278\c66379;
\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c19418\c42935\c45455;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  ElevationView.swift\cf4 \
\cf2 //  CessnaPerf\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by Richard Clark on 01/05/2023.\cf4 \
\cf2 //\cf4 \
\
\
\pard\tx593\pardeftab593\partightenfactor0

\f1\b \cf5 import
\f0\b0 \cf4  SwiftUI\
\
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf6 oldElevationView\cf4 : \cf7 View\cf4  \{\
    \cf2 //@EnvironmentObject var checkCalc: CheckCalc\cf4 \
    \cf7 @Binding\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 elevationEntry\cf4 : \cf7 String\cf4 \
    \cf7 @Binding\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 isElevationValid\cf4 : \cf7 Bool\cf4 \
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 focused\cf4 : \cf7 FocusState\cf4 <\cf7 Bool\cf4 ?>.\cf7 Binding\cf4 \
    
\f1\b \cf5 let
\f0\b0 \cf4  \cf8 lightBlue\cf4  = \cf7 UIColor\cf4 (\cf9 hue\cf4 : \cf10 0.5472\cf4 , \cf9 saturation\cf4 : \cf10 0.42\cf4 , \cf9 brightness\cf4 : \cf10 0.97\cf4 , \cf9 alpha\cf4 : \cf10 1.0\cf4 )\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 body\cf4 : 
\f1\b \cf5 some
\f0\b0 \cf4  \cf7 View\cf4  \{\
        \cf7 ZStack\cf4 (\cf9 alignment\cf4 : .\cf9 center\cf4 ) \{\
            \cf7 HStack\cf4 \{\
                \cf7 Text\cf4 (\cf11 "Airfield elevn:"\cf4 )\
                    .\cf9 font\cf4 (.\cf9 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf9 size\cf4 : \cf10 25\cf4 ))\
                \cf7 TextField\cf4 (\cf11 "       "\cf4 , \cf7 text\cf4 : \cf12 $elevationEntry\cf4 )\
                \{\
                    isEditing 
\f1\b \cf5 in
\f0\b0 \cf4  \cf2 //self.isEditing = isEditing\cf4 \
                    
\f1\b \cf5 if
\f0\b0 \cf4  isEditing == 
\f1\b \cf5 true
\f0\b0 \cf4  \{\
                        \cf12 isElevationValid\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
                    \} 
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                        
\f1\b \cf5 if
\f0\b0 \cf4  \cf12 checkElevation\cf4 (\cf12 elevationEntry\cf4 ) == 
\f1\b \cf5 false
\f0\b0 \cf4  \{\
                            \cf12 isElevationValid\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
                        \}\
                    \}\
                    
\f1\b \cf5 if
\f0\b0 \cf4  isEditing == 
\f1\b \cf5 false
\f0\b0 \cf4  \{\
                        
\f1\b \cf5 if
\f0\b0 \cf4  \cf12 checkElevation\cf4 (\cf12 elevationEntry\cf4 ) == 
\f1\b \cf5 false
\f0\b0 \cf4  \{\
                            \cf12 isElevationValid\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
                        \}\
                    \}\
                \}.\cf9 focused\cf4 (\cf12 focused\cf4 , \cf9 equals\cf4 : 
\f1\b \cf5 true
\f0\b0 \cf4 )\
                .\cf9 keyboardType\cf4 (.\cf9 asciiCapableNumberPad\cf4 )\
                .\cf9 font\cf4 (.\cf9 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf9 size\cf4 : \cf10 25\cf4 ))\
                .\cf9 padding\cf4 ()\
               \cf2 // .position(x: 50, y: 12)//generates a new view\cf4 \
                .\cf9 frame\cf4 (\cf9 width\cf4 : \cf10 120\cf4 , \cf9 height\cf4 : \cf10 28\cf4 )\
                .\cf9 background\cf4 (\cf12 isElevationValid\cf4  ? \cf7 Color\cf4 .\cf9 clear\cf4  : \cf7 Color\cf4 .\cf9 red\cf4 .\cf9 opacity\cf4 (\cf10 0.7\cf4 ))\
                .\cf9 border\cf4 (\cf7 Color\cf4 .\cf9 black\cf4 , \cf9 width\cf4 : \cf10 0.5\cf4 )\
                .\cf9 font\cf4 (.\cf9 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf9 size\cf4 : \cf10 25\cf4 ))\
                \cf7 Text\cf4 (\cf11 "ft"\cf4 )\
                    .\cf9 font\cf4 (.\cf9 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf9 size\cf4 : \cf10 25\cf4 ))\
            \}\cf2 //end HStack\cf4 \
            .\cf9 frame\cf4 (\cf9 width\cf4 : \cf10 320\cf4 , \cf9 height\cf4 : \cf10 35\cf4 )\
            .\cf9 background\cf4 (\cf7 RoundedRectangle\cf4 (\cf9 cornerRadius\cf4 : \cf10 10\cf4 ).\cf9 fill\cf4 (\cf7 Color\cf4 (\cf12 lightBlue\cf4 )))\
            .\cf9 onTapGesture\cf4  \{\
                \cf12 elevationEntry\cf4  = \cf11 ""\cf4 \
                \cf12 isElevationValid\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
                \cf12 checkCalc\cf4 .\cf12 isValid\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
            \}\
        \}\cf2 // end ZStack\cf4 \
    \}\
\}\
\

\f1\b \cf5 func
\f0\b0 \cf4  \cf8 checkElevation\cf4 (\cf8 _\cf4  elevationInput: \cf7 String\cf4 ) -> \cf7 Bool\cf4  \{\
    
\f1\b \cf5 if
\f0\b0 \cf4  elevationInput.\cf9 isEmpty\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 true
\f0\b0 \cf4 \
    \}\
    
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  intElevation = \cf7 Int\cf4 (elevationInput) \{\
        
\f1\b \cf5 if
\f0\b0 \cf4  intElevation >= \cf10 0\cf4  && intElevation <= \cf10 2000\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 true
\f0\b0 \cf4 \
        \}
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
        \}\
    \}\
    
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
\}\
\pard\tx593\pardeftab593\partightenfactor0
\cf2 //struct PAView_Previews: PreviewProvider \{\cf4 \
\cf2 //    static var previews: some View \{\cf4 \
\cf2 //        ElevationView(elevationEntry: .constant( "1000"), isElevationValid: .constant(true))\cf4 \
\cf2 //    \}\cf4 \
\cf2 //\}\cf4 \
}