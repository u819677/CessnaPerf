{\rtf1\ansi\ansicpg1252\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red93\green108\blue121;\red255\green255\blue255;\red0\green0\blue0;
\red155\green35\blue147;\red11\green79\blue121;\red57\green0\blue160;\red15\green104\blue160;\red28\green0\blue207;
\red108\green54\blue169;\red196\green26\blue22;\red50\green109\blue116;}
{\*\expandedcolortbl;;\csgenericrgb\c36526\c42188\c47515;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c11000\c0\c81000;
\csgenericrgb\c42190\c21278\c66379;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c19418\c42935\c45455;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\partightenfactor0

\f0\fs24 \cf2 \cb3 //\cf4 \
\cf2 //  QNHView.swift\cf4 \
\cf2 //  CessnaPerf\cf4 \
\cf2 //\cf4 \
\cf2 //  Created by Richard Clark on 01/05/2023.\cf4 \
\cf2 //\cf4 \
\
\
\pard\tx593\pardeftab593\partightenfactor0

\f1\b \cf5 import
\f0\b0 \cf4  SwiftUI\
\

\f1\b \cf5 struct
\f0\b0 \cf4  \cf6 oldQNHView\cf4 : \cf7 View\cf4  \{\
    \cf7 @EnvironmentObject\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 checkCalc\cf4 : CheckCalc\
    \cf7 @Binding\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 qnhEntry\cf4 : \cf7 String\cf4 \
    \cf7 @Binding\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 isQNHValid\cf4 : \cf7 Bool\cf4 \
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 focused\cf4 : \cf7 FocusState\cf4 <\cf7 Bool\cf4 ?>.\cf7 Binding\cf4 \
    \
    \cf7 @State\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 isEditing\cf4 : \cf7 Bool\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
    \cf7 @State\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 hadFocus\cf4 : \cf7 Bool\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
    \cf7 @State\cf4  
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 boolCount\cf4 : \cf7 Int\cf4  = \cf9 0\cf4 \
    
\f1\b \cf5 let
\f0\b0 \cf4  \cf8 lightBlue\cf4  = \cf7 UIColor\cf4 (\cf10 hue\cf4 : \cf9 0.5472\cf4 , \cf10 saturation\cf4 : \cf9 0.42\cf4 , \cf10 brightness\cf4 : \cf9 0.97\cf4 , \cf10 alpha\cf4 : \cf9 1.0\cf4 )\
    
\f1\b \cf5 var
\f0\b0 \cf4  \cf8 body\cf4 : 
\f1\b \cf5 some
\f0\b0 \cf4  \cf7 View\cf4  \{\
        \cf7 ZStack\cf4 (\cf10 alignment\cf4 : .\cf10 center\cf4 ) \{\
            \cf7 HStack\cf4  \{\
                \cf7 Text\cf4 (\cf11 "           QNH:   "\cf4 )\
                    .\cf10 font\cf4 (.\cf10 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf10 size\cf4 : \cf9 25\cf4 ))\
                \cf7 TextField\cf4 (\cf11 "    "\cf4 , \cf7 text\cf4 : \cf12 $qnhEntry\cf4 )\
                \{\
                    isEditing 
\f1\b \cf5 in
\f0\b0 \cf4  \cf2 //self.isEditing = isEditing\cf4 \
                    
\f1\b \cf5 if
\f0\b0 \cf4  isEditing == 
\f1\b \cf5 true
\f0\b0 \cf4  \{\
                        \cf12 isQNHValid\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
                    \}
\f1\b \cf5 else
\f0\b0 \cf4  \{\
                        
\f1\b \cf5 if
\f0\b0 \cf4  \cf12 checkQNH\cf4 (\cf12 qnhEntry\cf4 ) == 
\f1\b \cf5 false
\f0\b0 \cf4  \{\
                            \cf12 isQNHValid\cf4  = 
\f1\b \cf5 false
\f0\b0 \cf4 \
                        \}\
                    \}\
                \}  .\cf10 focused\cf4 (\cf12 focused\cf4 , \cf10 equals\cf4 : 
\f1\b \cf5 true
\f0\b0 \cf4 )\
\pard\tx593\pardeftab593\partightenfactor0
\cf2 //                onCommit: \{     //this is the new(ish) trailing closure syntax\cf4 \
\cf2 //                \}\cf4 \
              \
                .\cf10 keyboardType\cf4 (.\cf10 asciiCapableNumberPad\cf4 )\
                .\cf10 font\cf4 (.\cf10 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf10 size\cf4 : \cf9 25\cf4 ))\
                .\cf10 padding\cf4 ()\
                \cf2 //.position(x: 50, y: 12)//generates a new view\cf4 \
                .\cf10 frame\cf4 (\cf10 width\cf4 : \cf9 120\cf4 , \cf10 height\cf4 : \cf9 28\cf4 )\
\cf2 //                .background((!hadFocus || boolCount == 2) && isQNHValid ? Color.clear : Color.red.opacity(0.7))\cf4 \
                .\cf10 background\cf4 (\cf12 isQNHValid\cf4  ? \cf7 Color\cf4 .\cf10 clear\cf4  : \cf7 Color\cf4 .\cf10 red\cf4 .\cf10 opacity\cf4 (\cf9 0.7\cf4 ))\
                .\cf10 border\cf4 (\cf7 Color\cf4 .\cf10 black\cf4 , \cf10 width\cf4 : \cf9 0.5\cf4 )\
                .\cf10 font\cf4 (.\cf10 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf10 size\cf4 : \cf9 25\cf4 ))\
                \cf7 Text\cf4 (\cf11 "hPa"\cf4 )\
                    \cf2 //  .foregroundColor(.white)\cf4 \
                    .\cf10 font\cf4 (.\cf10 custom\cf4 (\cf11 "Noteworthy Bold"\cf4 , \cf10 size\cf4 : \cf9 25\cf4 ))\
            \}\cf2 //end HStack\cf4 \
    \
            .\cf10 frame\cf4 (\cf10 width\cf4 : \cf9 320\cf4 , \cf10 height\cf4 : \cf9 35\cf4 )\
            .\cf10 background\cf4 (\cf7 RoundedRectangle\cf4 (\cf10 cornerRadius\cf4 : \cf9 10\cf4 ).\cf10 fill\cf4 (\cf7 Color\cf4 (\cf12 lightBlue\cf4 )))\
            .\cf10 onTapGesture\cf4  \{\
                \cf12 qnhEntry\cf4  = \cf11 ""\cf4 \
                \cf12 isQNHValid\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
                \cf12 checkCalc\cf4 .\cf12 isValid\cf4  = 
\f1\b \cf5 true
\f0\b0 \cf4 \
                \cf2 //  hadFocus = true\cf4 \
                \cf10 print\cf4 (\cf12 isQNHValid\cf4 )\
            \}\
        \}\
    \}\
\}\
\pard\tx593\pardeftab593\partightenfactor0

\f1\b \cf5 func
\f0\b0 \cf4  \cf8 checkQNH\cf4 (\cf8 _\cf4  qnhInput: \cf7 String\cf4 ) -> \cf7 Bool\cf4  \{\
    
\f1\b \cf5 if
\f0\b0 \cf4  qnhInput.\cf10 isEmpty\cf4  \{\
        
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 true
\f0\b0 \cf4 \
    \}\
    
\f1\b \cf5 if
\f0\b0 \cf4  
\f1\b \cf5 let
\f0\b0 \cf4  intQNH = \cf7 Int\cf4 (qnhInput) \{\
        
\f1\b \cf5 if
\f0\b0 \cf4  intQNH >= \cf9 950\cf4  && intQNH <= \cf9 1050\cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 true
\f0\b0 \cf4 \
        \}
\f1\b \cf5 else
\f0\b0 \cf4  \{\
            
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
        \}\
    \}\
    
\f1\b \cf5 return
\f0\b0 \cf4  
\f1\b \cf5 false
\f0\b0 \cf4 \
\}\
\pard\tx593\pardeftab593\partightenfactor0
\cf2 //struct QNHView_Previews: PreviewProvider \{\cf4 \
\cf2 //    static var previews: some View \{\cf4 \
\cf2 //        QNHView(qnhEntry: .constant( "1013"), isQNHValid: .constant(true))\cf4 \
\cf2 //    \}\cf4 \
\cf2 //\}\cf4 \
}